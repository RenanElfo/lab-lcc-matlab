% This script includes informations regarding the encoders of the control
% system. Add new encoders as required.

% Useful constants
RAD2DEG = 180/pi;

global ENCODERS

% Preconfigured for rotary servo
ENCODER_01.ENCODER_COUNTS_PER_TURN = 4096;
ENCODER_01.ENCODER_TO_RADIANS = 2*pi/ENCODER_01.ENCODER_COUNTS_PER_TURN;
ENCODER_01.ENCODER_TO_DEGREES = RAD2DEG*ENCODER_01.ENCODER_TO_RADIANS;
ENCODER_01.ENCODER_QUADRATURE_MODE = 4;
ENCODER_01.ENCODER_INITIAL_VALUE = 0;
ENCODER_01.CONNECTION = 0;
ENCODERS{1} = ENCODER_01;

% Example
ENCODER_02.ENCODER_COUNTS_PER_TURN = 4096;
ENCODER_02.ENCODER_TO_RADIANS = 2*pi/ENCODER_02.ENCODER_COUNTS_PER_TURN;
ENCODER_02.ENCODER_TO_DEGREES = RAD2DEG*ENCODER_02.ENCODER_TO_RADIANS;
ENCODER_02.ENCODER_QUADRATURE_MODE = 4;
ENCODER_02.ENCODER_INITIAL_VALUE = 0;
ENCODER_02.CONNECTION = 1;
ENCODERS{2} = ENCODER_02;

% Example
ENCODER_03.ENCODER_COUNTS_PER_TURN = 4096;
ENCODER_03.ENCODER_TO_RADIANS = 2*pi/ENCODER_03.ENCODER_COUNTS_PER_TURN;
ENCODER_03.ENCODER_TO_DEGREES = RAD2DEG*ENCODER_03.ENCODER_TO_RADIANS;
ENCODER_03.ENCODER_QUADRATURE_MODE = 4;
ENCODER_03.ENCODER_INITIAL_VALUE = 0;
ENCODER_03.CONNECTION = 4;
ENCODERS{3} = ENCODER_03;

% Example
ENCODER_04.ENCODER_COUNTS_PER_TURN = 4096;
ENCODER_04.ENCODER_TO_RADIANS = 2*pi/ENCODER_04.ENCODER_COUNTS_PER_TURN;
ENCODER_04.ENCODER_TO_DEGREES = RAD2DEG*ENCODER_04.ENCODER_TO_RADIANS;
ENCODER_04.ENCODER_QUADRATURE_MODE = 4;
ENCODER_04.ENCODER_INITIAL_VALUE = 0;
ENCODER_04.CONNECTION = 5;
ENCODERS{4} = ENCODER_04;

for i = 1:size(ENCODERS, 2)
    hil_set_encoder_quadrature_mode( ...
        TERMINAL.TERMINAL_HANDLE, ENCODERS{i}.CONNECTION, ...
        ENCODERS{i}.ENCODER_QUADRATURE_MODE ...
    );
    hil_set_encoder_counts( ...
        TERMINAL.TERMINAL_HANDLE, ENCODERS{i}.CONNECTION, ...
        ENCODERS{i}.ENCODER_INITIAL_VALUE ...
    );
end

clear i;
clear RAD2DEG;
clear ENCODER_01;
clear ENCODER_02;
clear ENCODER_03;
clear ENCODER_04;
